
TASKLIST PRIORITY:
Enter task and it will appear in the table below. 
Create table with sort function
  -has date and priority
Allow completion indication / Delete task
  -they are not the same 
    - cross out completed
    -feedback noise when completion is indicated / or alert

Allow subtasks //n
  - When main checkbox is checked, all subtasks are also checked and vice versa
  - can only add subtask to existing task. inserts between current task and task below. 
  - probably also need to set different due date and priority.
Allow editing on the table. // n

- convert to bootstrap 
- style


Initial Sketch:
https://imgur.com/a/16JXLBs


Is your site targeted to a specific group of users? If so, what are the demographics of that
group and how do you appeal to this group? What were some design considerations that you took into account when you designed your site?

 My site is targeted specifically to me and what I would want in my To-Do List app. In the end, it is something of my creation, so that, above anything, appeals to me. My most important design consideration is functionality. Rather than adding features that don't work as I intend, I just scrap it. 

What about your interface do you think is particularly appealing? Is there anything that
you think could be improved upon?

I am happy with how the undo button turned out. But I do feel like a redo button would be cool too. 

There are a lot of things to improve on. Adding subtasks, sounds, widgets, icons. I know I could do much better. I will continue to work on this after submission.


● Refer to Schneiderman’s eight heuristics for interface design. Which did you consider in
your site and how?

1. Consistency
like every todolist that's ever been made.
2. Shortcuts
n
3. Informative Feedback
- clicking headers sort
- mark as complete has alert and strike through on text
4. Dialogue
- universal type cursor 
5. Error handling
-cannot mark as complete or delete without checking box
-cannot add task without required fields.
6. Permit reversal of actions
- undo button. This is my most intentional consideration of the eight rules. 

7. Support internal locus of control
-given
8. Reduce short-term memory load
- I do only have a few buttons.

● Identify at least one affordance and one constraint in your site and explain how they are made visible. 

My undo button undoes the most recent action, which is exactly what an undo button should do. 

Required input of task field before the form can be submitted into the table. Reminder by alert. 

  
  ● a list of exactly which tasks you completed and which you did not

COMPLETED:
Create a website using HTML and Bootstrap (use the starter template and include the responsive meta-tag to make your site responsive on mobile devices). (2 pts)
Add a list of tasks and use CSS to format the list so that it is a well-designed to do list. Be thoughtful and intentional about your design. (2 pts)
Allow the user to add items to the to do list. (This will require additional HTML elements as well as JavaScript.) (2 pts)
Allow the user to indicate completion of a task (e.g. check off, cross out) and removal from the list. (2 pts)
Allow the user to delete tasks from the list. (Note that this is not the same as completing tasks; the user may decide that it was an error to have included the tasks in the first place.) (2 pts)
Make it Better
Allow users to associate a due date with a task and display the due dates next to the tasks. (Use <input type="date"> for the date input.) (2 pts)
Allow users to “un-complete” items that were accidentally checked off. (1 pts)
Even Better
Allow users to color code tasks to indicate priority or type of task. (2 pts)
Give some sort of celebratory recognition when users complete a task – visual or sound
r both – beyond the simple feedback of the check/cross out. (See Google Tasks for an example.) Again, be thoughtful and deliberate about your design. (1 pt)

NOT COMPLETED:
Allow users to define subtasks. Subtasks should be able to be checked off/deleted
individually OR checked off /deleted together with the super-task. (1 pt)
Grading Details: The following are a prerequisite to my grading your assignment. (If these conditions are not met, it’s an automatic zero): ● Use of GitHub and GitHub pages ● Inclusion of a list of clear citations to resources used in completing this assignment ● A clear list of which tasks you have completed Completing the written document

Also include:
● references/citations to resources that you used (as above) 

CITATIONS:

Styling tutorial: 
https://youtu.be/1PnVor36_40?si=bYUqS8IqCR9JdjBS

style table:
https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Styling_tables

https://www.freecodecamp.org/news/innerhtml-vs-innertext-vs-textcontent/

ChatGPT:
I've inserted my code into ChatGPT numerous times to check for syntax errors and different methods I can use. Aside from syntax errors, these are the pieces of code that I ended up using and my prompts for them. 

how do i make a sorted table in HTML?
function sortTable(columnIndex) {
  var table, rows, switching, i, x, y, shouldSwitch;
  table = document.getElementById("myTable");
  switching = true;
  while (switching) {
    switching = false;
    rows = table.rows;
    for (i = 1; i < (rows.length - 1); i++) {
      shouldSwitch = false;
      x = rows[i].getElementsByTagName("td")[columnIndex];
      y = rows[i + 1].getElementsByTagName("td")[columnIndex];
      if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
        shouldSwitch = true;
        break;
      }
    }
    if (shouldSwitch) {
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
    }
  }
}

how do I right align my delete and undo button?
<body>
  <!-- Other HTML code -->
  <div style="text-align: right;">
    <button id="clearButton">Delete</button>
    <button id="undoButton">Undo</button>
  </div>
  <script>
    // JavaScript code
  </script>
</body>

how do i insert a checkbox in this table? 

var checkCell = newRow.insertCell(0);
var checkbox = document.createElement('input');
checkbox.type = 'checkbox';
checkbox.name = 'name1';
checkCell.appendChild(checkbox);

how do i get the checked box from an existing table to remove a row?
function removeCheckedRows() {
    // Get all checkboxes in the table
    var checkboxes = document.querySelectorAll('#todoList input[type="checkbox"]');
    
    // Iterate over each checkbox
    checkboxes.forEach(function(checkbox) {
        // Check if the checkbox is checked
        if (checkbox.checked) {
            // Get the parent row of the checkbox
            var row = checkbox.closest('tr');
            
            // Remove the row from the table
            row.parentNode.removeChild(row);
        }
    });
}


how do i add an undo button that can undo deletions and additions?

To implement an "Undo" button that can revert both task additions and deletions, you can maintain a stack to keep track of actions performed (both adding and deleting tasks). Here's how you can modify your code to achieve this:

var actionStack = [];
 actionStack.push({ action: 'add', taskRow: newRow });
  actionStack.push({ action: 'delete', taskRow: row.outerHTML });
  function undoAction() {
    if (actionStack.length > 0) {
      var lastAction = actionStack.pop();
      if (lastAction.action === 'add') {
        lastAction.taskRow.parentNode.removeChild(lastAction.taskRow);
      } else if (lastAction.action === 'delete') {
        var tableBody = document.getElementById('todoList').getElementsByTagName('tbody')[0];
        var tempRow = document.createElement('tr');
        tempRow.textContent = lastAction.taskRow;
        tableBody.appendChild(tempRow);
      }
    }
  }



Troubleshoot: 
I did have a slight problem with how priority could be sorted. With the sort that I have, a ascending sort based on textContent value, which works with sorting Task List and Due Date, but not priority. I found that object literals can assign an inner value to variables like this:
        "high": 3,
        "medium": 2,
        "low": 1
So, I now can keep the sort that I already had. 

When I deleted something or marked something as completed and pressed the undo button, it would undo each row one at a time. To fix this, I pushed all of the checked boxed rows into an array and appended them together. 
Also made sure to move action stack out of the inner loops, so that I can register the grouping as a singular action. 

I had a lot of trouble with removing the classList 'completed'. Before I created completionStack, I only had actionStack and every action was stored in there. So I had "lastAction.taskRow.classList.remove('completed');" and I would constantly get this kind of error: "TypeError: Cannot read properties of undefined (reading 'remove')". I'm still not completely sure, but what I have right now works, so that's cool. 

Pressing "Mark as Completed" still brings up completion alert. Fixed by adding boolean variable anyChecked.

Marking something as completed -> Deleting -> Undo. 
does not bring it back to the state of 'completed'. Fixed by pushing boolean variable that is based on whether the row's classList contains 'completed'. Also needed to use use innerHTML instead of textContent because the cells weren't kept. 

After filling out the Create Task form, it resets to default. 
Make sure every criteria is required.

After marking something as completed, checkbox is unchecked. 

Created undo button that goes up an array undoing actions.

Delete button works.